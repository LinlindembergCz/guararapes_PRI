

// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using LukeSkywalker.Domain.Entities;
using LukeSkywalker.Domain.Commands.Response;

namespace LukeSkywalker.Infra.Database
{
    public partial class ApplicationDBContext : DbContext
    {
        public ApplicationDBContext(DbContextOptions<ApplicationDBContext> options) : base(options)
        {
        }

        public virtual DbSet<Films> Films { get; set; }
        public virtual DbSet<People> People { get; set; }
        public virtual DbSet<CreatePeopleResponse> PeopleResponse { get; set; }
        public virtual DbSet<Planets> Planets { get; set; }
        public virtual DbSet<Species> Species { get; set; }
        public virtual DbSet<Starships> Starships { get; set; }
        public virtual DbSet<Vehicles> Vehicles { get; set; }
        public virtual DbSet<FilmsPeoplePeople> FilmsPeoplePeople { get; set; }
        public virtual DbSet<PeopleFilmsFilms> PeopleFilmsFilms { get; set; }

        /* 
         public virtual DbSet<FilmsPlanetsPlanets> FilmsPlanetsPlanets { get; set; }
         public virtual DbSet<FilmsSpeciesSpecies> FilmsSpeciesSpecies { get; set; }
         public virtual DbSet<FilmsStarshipsStarships> FilmsStarshipsStarships { get; set; }
         public virtual DbSet<FilmsVehiclesVehicles> FilmsVehiclesVehicles { get; set; }        
        
         public virtual DbSet<PeopleSpeciesSpecies> PeopleSpeciesSpecies { get; set; }
         public virtual DbSet<PeopleStarshipsStarships> PeopleStarshipsStarships { get; set; }
         public virtual DbSet<PeopleVehiclesVehicles> PeopleVehiclesVehicles { get; set; }       
         public virtual DbSet<PlanetsFilmsFilms> PlanetsFilmsFilms { get; set; }
         public virtual DbSet<PlanetsPeoplePeople> PlanetsPeoplePeople { get; set; }       
         public virtual DbSet<SpeciesFilmsFilms> SpeciesFilmsFilms { get; set; }
         public virtual DbSet<SpeciesPeoplePeople> SpeciesPeoplePeople { get; set; }
         public virtual DbSet<StarshipsFilmsFilms> StarshipsFilmsFilms { get; set; }
         public virtual DbSet<StarshipsPeoplePeople> StarshipsPeoplePeople { get; set; }       
         public virtual DbSet<VehiclesFilmsFilms> VehiclesFilmsFilms { get; set; }
         public virtual DbSet<VehiclesPeoplePeople> VehiclesPeoplePeople { get; set; }
        */



        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<CreatePeopleResponse>(entity => {
                entity.ToTable("people");
                entity.HasOne<People>().WithOne().HasForeignKey<CreatePeopleResponse>(e => e.id);
            });

            modelBuilder.Entity<Films>(entity =>
            {
                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Director)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.OpeningCrawl)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Producer)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.ReleaseDate)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Title)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<FilmsPeoplePeople>(entity =>
            {
                entity.HasKey(e => new { e.FilmsId, e.PeopleId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.FilmsPeoplePeople)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_b881b30fe31ea40ac371228bcd5");

                entity.HasOne(d => d.People)
                    .WithMany(p => p.FilmsPeoplePeople)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_da2f86aa6b63734b057c04f41c5");
            });

          modelBuilder.Entity<FilmsPlanetsPlanets>(entity =>
            {
                entity.HasKey(e => new { e.FilmsId, e.PlanetsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.FilmsPlanetsPlanets)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_59f34f486757575a016c3750616");

                entity.HasOne(d => d.Planets)
                    .WithMany(p => p.FilmsPlanetsPlanets)
                    .HasForeignKey(d => d.PlanetsId)
                    .HasConstraintName("FK_956e9e10fd96ed618538bb2b96c");
            });

            modelBuilder.Entity<FilmsSpeciesSpecies>(entity =>
            {
                entity.HasKey(e => new { e.FilmsId, e.SpeciesId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.FilmsSpeciesSpecies)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_be1d816ce6bdc4677080067eb4b");

                entity.HasOne(d => d.Species)
                    .WithMany(p => p.FilmsSpeciesSpecies)
                    .HasForeignKey(d => d.SpeciesId)
                    .HasConstraintName("FK_6042e3f9819bb64e4264509f73e");
            });

            modelBuilder.Entity<FilmsStarshipsStarships>(entity =>
            {
                entity.HasKey(e => new { e.FilmsId, e.StarshipsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.FilmsStarshipsStarships)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_3965a3d69c030eca6799a06d9d7");

                entity.HasOne(d => d.Starships)
                    .WithMany(p => p.FilmsStarshipsStarships)
                    .HasForeignKey(d => d.StarshipsId)
                    .HasConstraintName("FK_e79353f238988153784b207757c");
            });

            modelBuilder.Entity<FilmsVehiclesVehicles>(entity =>
            {
                entity.HasKey(e => new { e.FilmsId, e.VehiclesId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.FilmsVehiclesVehicles)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_21c53d0d80b975c872a4ca4ada3");

                entity.HasOne(d => d.Vehicles)
                    .WithMany(p => p.FilmsVehiclesVehicles)
                    .HasForeignKey(d => d.VehiclesId)
                    .HasConstraintName("FK_a623eaa88213329f69118cdea5d");
            });

            modelBuilder.Entity<People>(entity =>
            {
                entity.Property(e => e.BirthYear)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.EyeColor)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Gender)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.HairColor)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Height)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Homeworld)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Mass)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.SkinColor)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<PeopleFilmsFilms>(entity =>
            {
                entity.HasKey(e => new { e.PeopleId, e.FilmsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.PeopleFilmsFilms)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_80ce66926f5e215472c235a3a61");

                entity.HasOne(d => d.People)
                    .WithMany(p => p.PeopleFilmsFilms)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_be3d4bf0a2a829c091594359de7");
            });

            modelBuilder.Entity<PeopleSpeciesSpecies>(entity =>
            {
                entity.HasKey(e => new { e.PeopleId, e.SpeciesId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.PeopleSpeciesSpecies)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_d6d545e4740ee652e6f79e9ffd5");

                entity.HasOne(d => d.Species)
                    .WithMany(p => p.PeopleSpeciesSpecies)
                    .HasForeignKey(d => d.SpeciesId)
                    .HasConstraintName("FK_9232984d4ee14342ad97f443824");
            });

            modelBuilder.Entity<PeopleStarshipsStarships>(entity =>
            {
                entity.HasKey(e => new { e.PeopleId, e.StarshipsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.PeopleStarshipsStarships)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_78e90ed25ace2390fa2c7a4d50c");

                entity.HasOne(d => d.Starships)
                    .WithMany(p => p.PeopleStarshipsStarships)
                    .HasForeignKey(d => d.StarshipsId)
                    .HasConstraintName("FK_0a5517fc734c462fc3a0d32eb99");
            });

            modelBuilder.Entity<PeopleVehiclesVehicles>(entity =>
            {
                entity.HasKey(e => new { e.PeopleId, e.VehiclesId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.PeopleVehiclesVehicles)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_a7b8cbe95c602d58ade9845ce63");

                entity.HasOne(d => d.Vehicles)
                    .WithMany(p => p.PeopleVehiclesVehicles)
                    .HasForeignKey(d => d.VehiclesId)
                    .HasConstraintName("FK_f872d6f9465604601135f419704");
            });

            modelBuilder.Entity<Planets>(entity =>
            {
                entity.Property(e => e.Climate)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Diameter)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Gravity)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.OrbitalPeriod)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Population)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.RotationPeriod)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.SurfaceWater)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Terrain)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<PlanetsFilmsFilms>(entity =>
            {
                entity.HasKey(e => new { e.PlanetsId, e.FilmsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.PlanetsFilmsFilms)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_0d7eb62f80e794b5701ad7a8ff8");

                entity.HasOne(d => d.Planets)
                    .WithMany(p => p.PlanetsFilmsFilms)
                    .HasForeignKey(d => d.PlanetsId)
                    .HasConstraintName("FK_fb27cd4913415c3a51818eda847");
            });

            modelBuilder.Entity<PlanetsPeoplePeople>(entity =>
            {
                entity.HasKey(e => new { e.PlanetsId, e.PeopleId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.PlanetsPeoplePeople)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_eb823df3f9365cb643394002221");

                entity.HasOne(d => d.Planets)
                    .WithMany(p => p.PlanetsPeoplePeople)
                    .HasForeignKey(d => d.PlanetsId)
                    .HasConstraintName("FK_3f043ecf2a618410a25a1de60ed");
            });

            modelBuilder.Entity<Species>(entity =>
            {
                entity.Property(e => e.AverageHeight)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.AverageLifespan)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Classification)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Designation)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.EyeColors)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.HairColors)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Homeworld)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Language)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.SkinColors)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<SpeciesFilmsFilms>(entity =>
            {
                entity.HasKey(e => new { e.SpeciesId, e.FilmsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.SpeciesFilmsFilms)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_1bb7bf460101ed61435f7f806b3");

                entity.HasOne(d => d.Species)
                    .WithMany(p => p.SpeciesFilmsFilms)
                    .HasForeignKey(d => d.SpeciesId)
                    .HasConstraintName("FK_15037e69b396f7e73bc515265a8");
            });

            modelBuilder.Entity<SpeciesPeoplePeople>(entity =>
            {
                entity.HasKey(e => new { e.SpeciesId, e.PeopleId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.SpeciesPeoplePeople)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_4c896768b50c46acd8b611917e1");

                entity.HasOne(d => d.Species)
                    .WithMany(p => p.SpeciesPeoplePeople)
                    .HasForeignKey(d => d.SpeciesId)
                    .HasConstraintName("FK_62c0a74121aa06cdea24bc1e584");
            });

            modelBuilder.Entity<Starships>(entity =>
            {
                entity.Property(e => e.CargoCapacity)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Consumables)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.CostInCredits)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Crew)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.HyperdriveRating)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Length)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Manufacturer)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.MaxAtmospheringSpeed)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Mglt)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Model)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Passengers)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.StarshipClass)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<StarshipsFilmsFilms>(entity =>
            {
                entity.HasKey(e => new { e.StarshipsId, e.FilmsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.StarshipsFilmsFilms)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_98f924110ceb5aea4d7378ab381");

                entity.HasOne(d => d.Starships)
                    .WithMany(p => p.StarshipsFilmsFilms)
                    .HasForeignKey(d => d.StarshipsId)
                    .HasConstraintName("FK_46d44d404f4456ffd9844b199b1");
            });

            modelBuilder.Entity<StarshipsPeoplePeople>(entity =>
            {
                entity.HasKey(e => new { e.StarshipsId, e.PeopleId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.StarshipsPeoplePeople)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_18a1bb6f5e950770f28586659b1");

                entity.HasOne(d => d.Starships)
                    .WithMany(p => p.StarshipsPeoplePeople)
                    .HasForeignKey(d => d.StarshipsId)
                    .HasConstraintName("FK_1911c83a74aeb1af7ad576b5bdb");
            });

            modelBuilder.Entity<Vehicles>(entity =>
            {
                entity.Property(e => e.CargoCapacity)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Consumables)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.CostInCredits)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Created)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Crew)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Edited)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Length)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Manufacturer)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.MaxAtmospheringSpeed)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Model)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Name)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Passengers)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.Url)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");

                entity.Property(e => e.VehicleClass)
                    .HasCharSet("utf8mb4")
                    .HasCollation("utf8mb4_0900_ai_ci");
            });

            modelBuilder.Entity<VehiclesFilmsFilms>(entity =>
            {
                entity.HasKey(e => new { e.VehiclesId, e.FilmsId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.Films)
                    .WithMany(p => p.VehiclesFilmsFilms)
                    .HasForeignKey(d => d.FilmsId)
                    .HasConstraintName("FK_5e2fb2eb3483ccdba246e1fcb37");

                entity.HasOne(d => d.Vehicles)
                    .WithMany(p => p.VehiclesFilmsFilms)
                    .HasForeignKey(d => d.VehiclesId)
                    .HasConstraintName("FK_7b4cb950bab7edfc0a92351cddc");
            });

            modelBuilder.Entity<VehiclesPeoplePeople>(entity =>
            {
                entity.HasKey(e => new { e.VehiclesId, e.PeopleId })
                    .HasName("PRIMARY")
                    .HasAnnotation("MySql:IndexPrefixLength", new[] { 0, 0 });

                entity.HasOne(d => d.People)
                    .WithMany(p => p.VehiclesPeoplePeople)
                    .HasForeignKey(d => d.PeopleId)
                    .HasConstraintName("FK_96a94e6f0bb28e7880094f2ceeb");

                entity.HasOne(d => d.Vehicles)
                    .WithMany(p => p.VehiclesPeoplePeople)
                    .HasForeignKey(d => d.VehiclesId)
                    .HasConstraintName("FK_85b97aff3b9b8128311bb5284ed");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}




/*
 *
 *  "host": "mysqlservidor.mysql.database.azure.com",
    "username": "servidor@mysqlservidor",
    "password": "982666@Lindemberg",
    "database": "starwars",
    "port":3306,
 */