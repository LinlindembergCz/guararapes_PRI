// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using Microsoft.EntityFrameworkCore;

#nullable disable

namespace LukeSkywalker.Models
{
    [Table("planets")]
    [Index(nameof(Name), Name = "IDX_70a170f032a2ca04a6ec6eb2d9", IsUnique = true)]
    public partial class Planets
    {
        public Planets()
        {
            FilmsPlanetsPlanets = new HashSet<FilmsPlanetsPlanets>();
            PlanetsFilmsFilms = new HashSet<PlanetsFilmsFilms>();
            PlanetsPeoplePeople = new HashSet<PlanetsPeoplePeople>();
        }

        [Key]
        [Column("id")]
        public int Id { get; set; }
        [Required]
        [Column("name", TypeName = "varchar(200)")]
        public string Name { get; set; }
        [Column("diameter", TypeName = "varchar(200)")]
        public string Diameter { get; set; }
        [Column("rotation_period", TypeName = "varchar(200)")]
        public string RotationPeriod { get; set; }
        [Column("orbital_period", TypeName = "varchar(200)")]
        public string OrbitalPeriod { get; set; }
        [Column("gravity", TypeName = "varchar(200)")]
        public string Gravity { get; set; }
        [Column("population", TypeName = "varchar(200)")]
        public string Population { get; set; }
        [Column("climate", TypeName = "varchar(200)")]
        public string Climate { get; set; }
        [Column("terrain", TypeName = "varchar(200)")]
        public string Terrain { get; set; }
        [Column("surface_water", TypeName = "varchar(200)")]
        public string SurfaceWater { get; set; }
        [Column("url", TypeName = "varchar(200)")]
        public string Url { get; set; }
        [Column("created", TypeName = "varchar(30)")]
        public string Created { get; set; }
        [Column("edited", TypeName = "varchar(30)")]
        public string Edited { get; set; }

        [InverseProperty("Planets")]
        public virtual ICollection<FilmsPlanetsPlanets> FilmsPlanetsPlanets { get; set; }
        [InverseProperty("Planets")]
        public virtual ICollection<PlanetsFilmsFilms> PlanetsFilmsFilms { get; set; }
        [InverseProperty("Planets")]
        public virtual ICollection<PlanetsPeoplePeople> PlanetsPeoplePeople { get; set; }
    }
}